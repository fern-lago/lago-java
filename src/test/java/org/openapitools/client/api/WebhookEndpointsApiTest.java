/*
 * Lago API documentation
 * Lago API allows your application to push customer information and metrics (events) from your application to the billing application.
 *
 * The version of the OpenAPI document: 0.46.0-beta
 * Contact: tech@getlago.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiErrorBadRequest;
import org.openapitools.client.model.ApiErrorNotAllowed;
import org.openapitools.client.model.ApiErrorNotFound;
import org.openapitools.client.model.ApiErrorUnauthorized;
import org.openapitools.client.model.ApiErrorUnprocessableEntity;
import org.openapitools.client.model.CreateWebhookEndpoint200Response;
import org.openapitools.client.model.CreateWebhookEndpointRequest;
import org.openapitools.client.model.FindAllWebhookEndpoints200Response;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WebhookEndpointsApi
 */
@Disabled
public class WebhookEndpointsApiTest {

    private final WebhookEndpointsApi api = new WebhookEndpointsApi();

    /**
     * Create a webhook_endpoint
     *
     * This endpoint is used to create a webhook endpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createWebhookEndpointTest() throws ApiException {
        CreateWebhookEndpointRequest createWebhookEndpointRequest = null;
        CreateWebhookEndpoint200Response response = api.createWebhookEndpoint(createWebhookEndpointRequest);
        // TODO: test validations
    }

    /**
     * Delete a webhook endpoint
     *
     * This endpoint is used to delete an existing webhook endpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void destroyWebhookEndpointTest() throws ApiException {
        UUID lagoId = null;
        Object response = api.destroyWebhookEndpoint(lagoId);
        // TODO: test validations
    }

    /**
     * List all webhook endpoints
     *
     * This endpoint is used to list all webhook endpoints.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findAllWebhookEndpointsTest() throws ApiException {
        Integer page = null;
        Integer perPage = null;
        FindAllWebhookEndpoints200Response response = api.findAllWebhookEndpoints(page, perPage);
        // TODO: test validations
    }

    /**
     * Retrieve a webhook endpoint
     *
     * This endpoint is used to retrieve an existing webhook endpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findWebhookEndpointTest() throws ApiException {
        UUID lagoId = null;
        Object response = api.findWebhookEndpoint(lagoId);
        // TODO: test validations
    }

    /**
     * Update a webhook endpoint
     *
     * This endpoint is used to update an existing webhook endpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateWebhookEndpointTest() throws ApiException {
        UUID lagoId = null;
        CreateWebhookEndpointRequest createWebhookEndpointRequest = null;
        Object response = api.updateWebhookEndpoint(lagoId, createWebhookEndpointRequest);
        // TODO: test validations
    }

}
