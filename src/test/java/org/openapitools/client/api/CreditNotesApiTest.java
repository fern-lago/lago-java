/*
 * Lago API documentation
 * Lago API allows your application to push customer information and metrics (events) from your application to the billing application.
 *
 * The version of the OpenAPI document: 0.46.0-beta
 * Contact: tech@getlago.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiErrorBadRequest;
import org.openapitools.client.model.ApiErrorNotAllowed;
import org.openapitools.client.model.ApiErrorNotFound;
import org.openapitools.client.model.ApiErrorUnauthorized;
import org.openapitools.client.model.ApiErrorUnprocessableEntity;
import org.openapitools.client.model.CreditNote;
import org.openapitools.client.model.CreditNoteCreateInput;
import org.openapitools.client.model.CreditNoteUpdateInput;
import org.openapitools.client.model.CreditNotes;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CreditNotesApi
 */
@Disabled
public class CreditNotesApiTest {

    private final CreditNotesApi api = new CreditNotesApi();

    /**
     * Create a credit note
     *
     * This endpoint creates a new credit note.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createCreditNoteTest() throws ApiException {
        CreditNoteCreateInput creditNoteCreateInput = null;
        CreditNote response = api.createCreditNote(creditNoteCreateInput);
        // TODO: test validations
    }

    /**
     * Download a credit note PDF
     *
     * This endpoint downloads the PDF of an existing credit note.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void downloadCreditNoteTest() throws ApiException {
        UUID lagoId = null;
        CreditNote response = api.downloadCreditNote(lagoId);
        // TODO: test validations
    }

    /**
     * List all credit notes
     *
     * This endpoint list all existing credit notes.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findAllCreditNotesTest() throws ApiException {
        Integer page = null;
        Integer perPage = null;
        String externalCustomerId = null;
        CreditNotes response = api.findAllCreditNotes(page, perPage, externalCustomerId);
        // TODO: test validations
    }

    /**
     * Retrieve a credit note
     *
     * This endpoint retrieves an existing credit note.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findCreditNoteTest() throws ApiException {
        String lagoId = null;
        CreditNote response = api.findCreditNote(lagoId);
        // TODO: test validations
    }

    /**
     * Update a credit note
     *
     * This endpoint updates an existing credit note.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateCreditNoteTest() throws ApiException {
        String lagoId = null;
        CreditNoteUpdateInput creditNoteUpdateInput = null;
        CreditNote response = api.updateCreditNote(lagoId, creditNoteUpdateInput);
        // TODO: test validations
    }

    /**
     * Void a credit note
     *
     * This endpoint voids an existing credit note.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void voidCreditNoteTest() throws ApiException {
        UUID lagoId = null;
        CreditNote response = api.voidCreditNote(lagoId);
        // TODO: test validations
    }

}
