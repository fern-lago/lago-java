/*
 * Lago API documentation
 * Lago API allows your application to push customer information and metrics (events) from your application to the billing application.
 *
 * The version of the OpenAPI document: 0.52.0-beta
 * Contact: tech@getlago.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.getlago.client.api;

import org.openapitools.client.model.ApiErrorBadRequest;
import org.openapitools.client.model.ApiErrorNotFound;
import org.openapitools.client.model.ApiErrorUnauthorized;
import org.openapitools.client.model.ApiErrorUnprocessableEntity;
import org.openapitools.client.model.Currency;
import org.openapitools.client.model.Fee;
import org.openapitools.client.model.FeeUpdateInput;
import org.openapitools.client.model.FeesPaginated;
import java.time.OffsetDateTime;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

/**
 * API tests for FeesApi
 */
@Ignore
public class FeesApiTest {

    private final FeesApi api = new FeesApi();

    
    /**
     * List all fees
     *
     * This endpoint is used for retrieving all fees that has been issued.
     */
    @Test
    public void findAllFeesTest()  {
        Integer page = null;
        Integer perPage = null;
        String externalCustomerId = null;
        String externalSubscriptionId = null;
        Currency currency = null;
        String feeType = null;
        String billableMetricCode = null;
        String paymentStatus = null;
        OffsetDateTime createdAtFrom = null;
        OffsetDateTime createdAtTo = null;
        OffsetDateTime succeededAtFrom = null;
        OffsetDateTime succeededAtTo = null;
        OffsetDateTime failedAtFrom = null;
        OffsetDateTime failedAtTo = null;
        OffsetDateTime refundedAtFrom = null;
        OffsetDateTime refundedAtTo = null;
        FeesPaginated response = api.findAllFees(page, perPage, externalCustomerId, externalSubscriptionId, currency, feeType, billableMetricCode, paymentStatus, createdAtFrom, createdAtTo, succeededAtFrom, succeededAtTo, failedAtFrom, failedAtTo, refundedAtFrom, refundedAtTo).block();

        // TODO: test validations
    }
    
    /**
     * Retrieve a specific fee
     *
     * This endpoint is used for retrieving a specific fee that has been issued.
     */
    @Test
    public void findFeeTest()  {
        UUID lagoId = null;
        Fee response = api.findFee(lagoId).block();

        // TODO: test validations
    }
    
    /**
     * Update a fee
     *
     * This endpoint is used for updating a specific fee that has been issued.
     */
    @Test
    public void updateFeeTest()  {
        UUID lagoId = null;
        FeeUpdateInput feeUpdateInput = null;
        Fee response = api.updateFee(lagoId, feeUpdateInput).block();

        // TODO: test validations
    }
    
}
