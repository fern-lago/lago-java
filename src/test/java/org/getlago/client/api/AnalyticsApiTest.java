/*
 * Lago API documentation
 * Lago API allows your application to push customer information and metrics (events) from your application to the billing application.
 *
 * The version of the OpenAPI document: 0.52.0-beta
 * Contact: tech@getlago.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.getlago.client.api;

import org.openapitools.client.model.ApiErrorUnauthorized;
import org.openapitools.client.model.Currency;
import org.openapitools.client.model.GrossRevenues;
import org.openapitools.client.model.InvoicedUsages;
import org.openapitools.client.model.Mrrs;
import org.openapitools.client.model.OutstandingInvoices;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

/**
 * API tests for AnalyticsApi
 */
@Ignore
public class AnalyticsApiTest {

    private final AnalyticsApi api = new AnalyticsApi();

    
    /**
     * List gross revenue
     *
     * Gross revenue is the sum of monthly &#x60;finalized&#x60; invoice payments and fees paid in advance that are not invoiceable. This total is calculated after deducting taxes and discounts.
     */
    @Test
    public void findAllGrossRevenuesTest()  {
        Currency currency = null;
        String externalCustomerId = null;
        GrossRevenues response = api.findAllGrossRevenues(currency, externalCustomerId).block();

        // TODO: test validations
    }
    
    /**
     * List usage revenue
     *
     * Reports a monthly analysis focused on the revenue generated from all usage-based fees. It exclusively accounts for revenue that has been formally invoiced. Importantly, this report does not include revenue related to the usage in the current billing period, limiting its scope to previously invoiced amounts.
     */
    @Test
    public void findAllInvoicedUsagesTest()  {
        Currency currency = null;
        InvoicedUsages response = api.findAllInvoicedUsages(currency).block();

        // TODO: test validations
    }
    
    /**
     * List MRR
     *
     * This endpoint is used to list MRR.
     */
    @Test
    public void findAllMrrsTest()  {
        Currency currency = null;
        Integer months = null;
        Mrrs response = api.findAllMrrs(currency, months).block();

        // TODO: test validations
    }
    
    /**
     * List outstanding invoices
     *
     * Represents a monthly aggregation, detailing both the total count and the cumulative amount of invoices that have been marked as &#x60;finalized&#x60;. This report sorts invoices categorically based on their &#x60;payment_status&#x60;.
     */
    @Test
    public void findAllOutstandingInvoicesTest()  {
        Currency currency = null;
        OutstandingInvoices response = api.findAllOutstandingInvoices(currency).block();

        // TODO: test validations
    }
    
}
