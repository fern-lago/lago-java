/*
 * Lago API documentation
 * Lago API allows your application to push customer information and metrics (events) from your application to the billing application.
 *
 * The version of the OpenAPI document: 0.53.0-beta
 * Contact: tech@getlago.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.openapitools.client.model.CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner;
import org.openapitools.client.model.CreditNoteEstimatedEstimatedCreditNoteItemsInner;
import org.openapitools.client.model.Currency;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreditNoteEstimatedEstimatedCreditNote
 */
@JsonPropertyOrder({
  CreditNoteEstimatedEstimatedCreditNote.JSON_PROPERTY_LAGO_INVOICE_ID,
  CreditNoteEstimatedEstimatedCreditNote.JSON_PROPERTY_INVOICE_NUMBER,
  CreditNoteEstimatedEstimatedCreditNote.JSON_PROPERTY_CURRENCY,
  CreditNoteEstimatedEstimatedCreditNote.JSON_PROPERTY_TAXES_AMOUNT_CENTS,
  CreditNoteEstimatedEstimatedCreditNote.JSON_PROPERTY_TAXES_RATE,
  CreditNoteEstimatedEstimatedCreditNote.JSON_PROPERTY_SUB_TOTAL_EXCLUDING_TAXES_AMOUNT_CENTS,
  CreditNoteEstimatedEstimatedCreditNote.JSON_PROPERTY_MAX_CREDITABLE_AMOUNT_CENTS,
  CreditNoteEstimatedEstimatedCreditNote.JSON_PROPERTY_MAX_REFUNDABLE_AMOUNT_CENTS,
  CreditNoteEstimatedEstimatedCreditNote.JSON_PROPERTY_COUPONS_ADJUSTMENT_AMOUNT_CENTS,
  CreditNoteEstimatedEstimatedCreditNote.JSON_PROPERTY_ITEMS,
  CreditNoteEstimatedEstimatedCreditNote.JSON_PROPERTY_APPLIED_TAXES
})
@JsonTypeName("CreditNoteEstimated_estimated_credit_note")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-27T14:12:55.372025191Z[Etc/UTC]")
public class CreditNoteEstimatedEstimatedCreditNote {
  public static final String JSON_PROPERTY_LAGO_INVOICE_ID = "lago_invoice_id";
  private UUID lagoInvoiceId;

  public static final String JSON_PROPERTY_INVOICE_NUMBER = "invoice_number";
  private String invoiceNumber;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private Currency currency;

  public static final String JSON_PROPERTY_TAXES_AMOUNT_CENTS = "taxes_amount_cents";
  private Integer taxesAmountCents;

  public static final String JSON_PROPERTY_TAXES_RATE = "taxes_rate";
  private BigDecimal taxesRate;

  public static final String JSON_PROPERTY_SUB_TOTAL_EXCLUDING_TAXES_AMOUNT_CENTS = "sub_total_excluding_taxes_amount_cents";
  private Integer subTotalExcludingTaxesAmountCents;

  public static final String JSON_PROPERTY_MAX_CREDITABLE_AMOUNT_CENTS = "max_creditable_amount_cents";
  private Integer maxCreditableAmountCents;

  public static final String JSON_PROPERTY_MAX_REFUNDABLE_AMOUNT_CENTS = "max_refundable_amount_cents";
  private Integer maxRefundableAmountCents;

  public static final String JSON_PROPERTY_COUPONS_ADJUSTMENT_AMOUNT_CENTS = "coupons_adjustment_amount_cents";
  private Integer couponsAdjustmentAmountCents;

  public static final String JSON_PROPERTY_ITEMS = "items";
  private List<CreditNoteEstimatedEstimatedCreditNoteItemsInner> items = new ArrayList<>();

  public static final String JSON_PROPERTY_APPLIED_TAXES = "applied_taxes";
  private List<CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner> appliedTaxes;

  public CreditNoteEstimatedEstimatedCreditNote() {
  }

  public CreditNoteEstimatedEstimatedCreditNote lagoInvoiceId(UUID lagoInvoiceId) {
    
    this.lagoInvoiceId = lagoInvoiceId;
    return this;
  }

   /**
   * Unique identifier assigned to the invoice that the credit note belongs to
   * @return lagoInvoiceId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LAGO_INVOICE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getLagoInvoiceId() {
    return lagoInvoiceId;
  }


  @JsonProperty(JSON_PROPERTY_LAGO_INVOICE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLagoInvoiceId(UUID lagoInvoiceId) {
    this.lagoInvoiceId = lagoInvoiceId;
  }


  public CreditNoteEstimatedEstimatedCreditNote invoiceNumber(String invoiceNumber) {
    
    this.invoiceNumber = invoiceNumber;
    return this;
  }

   /**
   * The invoice unique number, related to the credit note.
   * @return invoiceNumber
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_INVOICE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getInvoiceNumber() {
    return invoiceNumber;
  }


  @JsonProperty(JSON_PROPERTY_INVOICE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setInvoiceNumber(String invoiceNumber) {
    this.invoiceNumber = invoiceNumber;
  }


  public CreditNoteEstimatedEstimatedCreditNote currency(Currency currency) {
    
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Currency getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCurrency(Currency currency) {
    this.currency = currency;
  }


  public CreditNoteEstimatedEstimatedCreditNote taxesAmountCents(Integer taxesAmountCents) {
    
    this.taxesAmountCents = taxesAmountCents;
    return this;
  }

   /**
   * The tax amount of the credit note, expressed in cents.
   * @return taxesAmountCents
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TAXES_AMOUNT_CENTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getTaxesAmountCents() {
    return taxesAmountCents;
  }


  @JsonProperty(JSON_PROPERTY_TAXES_AMOUNT_CENTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTaxesAmountCents(Integer taxesAmountCents) {
    this.taxesAmountCents = taxesAmountCents;
  }


  public CreditNoteEstimatedEstimatedCreditNote taxesRate(BigDecimal taxesRate) {
    
    this.taxesRate = taxesRate;
    return this;
  }

   /**
   * The tax rate associated with this specific credit note.
   * @return taxesRate
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TAXES_RATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getTaxesRate() {
    return taxesRate;
  }


  @JsonProperty(JSON_PROPERTY_TAXES_RATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTaxesRate(BigDecimal taxesRate) {
    this.taxesRate = taxesRate;
  }


  public CreditNoteEstimatedEstimatedCreditNote subTotalExcludingTaxesAmountCents(Integer subTotalExcludingTaxesAmountCents) {
    
    this.subTotalExcludingTaxesAmountCents = subTotalExcludingTaxesAmountCents;
    return this;
  }

   /**
   * The subtotal of the credit note excluding any applicable taxes, expressed in cents.
   * @return subTotalExcludingTaxesAmountCents
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SUB_TOTAL_EXCLUDING_TAXES_AMOUNT_CENTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getSubTotalExcludingTaxesAmountCents() {
    return subTotalExcludingTaxesAmountCents;
  }


  @JsonProperty(JSON_PROPERTY_SUB_TOTAL_EXCLUDING_TAXES_AMOUNT_CENTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSubTotalExcludingTaxesAmountCents(Integer subTotalExcludingTaxesAmountCents) {
    this.subTotalExcludingTaxesAmountCents = subTotalExcludingTaxesAmountCents;
  }


  public CreditNoteEstimatedEstimatedCreditNote maxCreditableAmountCents(Integer maxCreditableAmountCents) {
    
    this.maxCreditableAmountCents = maxCreditableAmountCents;
    return this;
  }

   /**
   * The credited amount of the credit note, expressed in cents.
   * @return maxCreditableAmountCents
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MAX_CREDITABLE_AMOUNT_CENTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getMaxCreditableAmountCents() {
    return maxCreditableAmountCents;
  }


  @JsonProperty(JSON_PROPERTY_MAX_CREDITABLE_AMOUNT_CENTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMaxCreditableAmountCents(Integer maxCreditableAmountCents) {
    this.maxCreditableAmountCents = maxCreditableAmountCents;
  }


  public CreditNoteEstimatedEstimatedCreditNote maxRefundableAmountCents(Integer maxRefundableAmountCents) {
    
    this.maxRefundableAmountCents = maxRefundableAmountCents;
    return this;
  }

   /**
   * The refunded amount of the credit note, expressed in cents.
   * @return maxRefundableAmountCents
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MAX_REFUNDABLE_AMOUNT_CENTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getMaxRefundableAmountCents() {
    return maxRefundableAmountCents;
  }


  @JsonProperty(JSON_PROPERTY_MAX_REFUNDABLE_AMOUNT_CENTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMaxRefundableAmountCents(Integer maxRefundableAmountCents) {
    this.maxRefundableAmountCents = maxRefundableAmountCents;
  }


  public CreditNoteEstimatedEstimatedCreditNote couponsAdjustmentAmountCents(Integer couponsAdjustmentAmountCents) {
    
    this.couponsAdjustmentAmountCents = couponsAdjustmentAmountCents;
    return this;
  }

   /**
   * The pro-rated amount of the coupons applied to the source invoice.
   * @return couponsAdjustmentAmountCents
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_COUPONS_ADJUSTMENT_AMOUNT_CENTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getCouponsAdjustmentAmountCents() {
    return couponsAdjustmentAmountCents;
  }


  @JsonProperty(JSON_PROPERTY_COUPONS_ADJUSTMENT_AMOUNT_CENTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCouponsAdjustmentAmountCents(Integer couponsAdjustmentAmountCents) {
    this.couponsAdjustmentAmountCents = couponsAdjustmentAmountCents;
  }


  public CreditNoteEstimatedEstimatedCreditNote items(List<CreditNoteEstimatedEstimatedCreditNoteItemsInner> items) {
    
    this.items = items;
    return this;
  }

  public CreditNoteEstimatedEstimatedCreditNote addItemsItem(CreditNoteEstimatedEstimatedCreditNoteItemsInner itemsItem) {
    if (this.items == null) {
      this.items = new ArrayList<>();
    }
    this.items.add(itemsItem);
    return this;
  }

   /**
   * Array of credit note’s items.
   * @return items
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ITEMS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<CreditNoteEstimatedEstimatedCreditNoteItemsInner> getItems() {
    return items;
  }


  @JsonProperty(JSON_PROPERTY_ITEMS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setItems(List<CreditNoteEstimatedEstimatedCreditNoteItemsInner> items) {
    this.items = items;
  }


  public CreditNoteEstimatedEstimatedCreditNote appliedTaxes(List<CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner> appliedTaxes) {
    
    this.appliedTaxes = appliedTaxes;
    return this;
  }

  public CreditNoteEstimatedEstimatedCreditNote addAppliedTaxesItem(CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner appliedTaxesItem) {
    if (this.appliedTaxes == null) {
      this.appliedTaxes = new ArrayList<>();
    }
    this.appliedTaxes.add(appliedTaxesItem);
    return this;
  }

   /**
   * Get appliedTaxes
   * @return appliedTaxes
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_APPLIED_TAXES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner> getAppliedTaxes() {
    return appliedTaxes;
  }


  @JsonProperty(JSON_PROPERTY_APPLIED_TAXES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAppliedTaxes(List<CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner> appliedTaxes) {
    this.appliedTaxes = appliedTaxes;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreditNoteEstimatedEstimatedCreditNote creditNoteEstimatedEstimatedCreditNote = (CreditNoteEstimatedEstimatedCreditNote) o;
    return Objects.equals(this.lagoInvoiceId, creditNoteEstimatedEstimatedCreditNote.lagoInvoiceId) &&
        Objects.equals(this.invoiceNumber, creditNoteEstimatedEstimatedCreditNote.invoiceNumber) &&
        Objects.equals(this.currency, creditNoteEstimatedEstimatedCreditNote.currency) &&
        Objects.equals(this.taxesAmountCents, creditNoteEstimatedEstimatedCreditNote.taxesAmountCents) &&
        Objects.equals(this.taxesRate, creditNoteEstimatedEstimatedCreditNote.taxesRate) &&
        Objects.equals(this.subTotalExcludingTaxesAmountCents, creditNoteEstimatedEstimatedCreditNote.subTotalExcludingTaxesAmountCents) &&
        Objects.equals(this.maxCreditableAmountCents, creditNoteEstimatedEstimatedCreditNote.maxCreditableAmountCents) &&
        Objects.equals(this.maxRefundableAmountCents, creditNoteEstimatedEstimatedCreditNote.maxRefundableAmountCents) &&
        Objects.equals(this.couponsAdjustmentAmountCents, creditNoteEstimatedEstimatedCreditNote.couponsAdjustmentAmountCents) &&
        Objects.equals(this.items, creditNoteEstimatedEstimatedCreditNote.items) &&
        Objects.equals(this.appliedTaxes, creditNoteEstimatedEstimatedCreditNote.appliedTaxes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(lagoInvoiceId, invoiceNumber, currency, taxesAmountCents, taxesRate, subTotalExcludingTaxesAmountCents, maxCreditableAmountCents, maxRefundableAmountCents, couponsAdjustmentAmountCents, items, appliedTaxes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreditNoteEstimatedEstimatedCreditNote {\n");
    sb.append("    lagoInvoiceId: ").append(toIndentedString(lagoInvoiceId)).append("\n");
    sb.append("    invoiceNumber: ").append(toIndentedString(invoiceNumber)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    taxesAmountCents: ").append(toIndentedString(taxesAmountCents)).append("\n");
    sb.append("    taxesRate: ").append(toIndentedString(taxesRate)).append("\n");
    sb.append("    subTotalExcludingTaxesAmountCents: ").append(toIndentedString(subTotalExcludingTaxesAmountCents)).append("\n");
    sb.append("    maxCreditableAmountCents: ").append(toIndentedString(maxCreditableAmountCents)).append("\n");
    sb.append("    maxRefundableAmountCents: ").append(toIndentedString(maxRefundableAmountCents)).append("\n");
    sb.append("    couponsAdjustmentAmountCents: ").append(toIndentedString(couponsAdjustmentAmountCents)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    appliedTaxes: ").append(toIndentedString(appliedTaxes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

