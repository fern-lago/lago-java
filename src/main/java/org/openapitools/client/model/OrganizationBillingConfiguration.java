/*
 * Lago API documentation
 * Lago API allows your application to push customer information and metrics (events) from your application to the billing application.
 *
 * The version of the OpenAPI document: 0.52.0-beta
 * Contact: tech@getlago.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * The custom billing settings for your organization.
 */
@JsonPropertyOrder({
  OrganizationBillingConfiguration.JSON_PROPERTY_INVOICE_FOOTER,
  OrganizationBillingConfiguration.JSON_PROPERTY_INVOICE_GRACE_PERIOD,
  OrganizationBillingConfiguration.JSON_PROPERTY_DOCUMENT_LOCALE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-11-24T14:46:07.416771019Z[Etc/UTC]")
public class OrganizationBillingConfiguration {
  public static final String JSON_PROPERTY_INVOICE_FOOTER = "invoice_footer";
  private JsonNullable<String> invoiceFooter = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_INVOICE_GRACE_PERIOD = "invoice_grace_period";
  private Integer invoiceGracePeriod;

  public static final String JSON_PROPERTY_DOCUMENT_LOCALE = "document_locale";
  private String documentLocale;

  public OrganizationBillingConfiguration() {
  }

  public OrganizationBillingConfiguration invoiceFooter(String invoiceFooter) {
    this.invoiceFooter = JsonNullable.<String>of(invoiceFooter);
    
    return this;
  }

   /**
   * The customer invoice message that appears at the bottom of each billing documents.
   * @return invoiceFooter
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getInvoiceFooter() {
        return invoiceFooter.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INVOICE_FOOTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getInvoiceFooter_JsonNullable() {
    return invoiceFooter;
  }
  
  @JsonProperty(JSON_PROPERTY_INVOICE_FOOTER)
  public void setInvoiceFooter_JsonNullable(JsonNullable<String> invoiceFooter) {
    this.invoiceFooter = invoiceFooter;
  }

  public void setInvoiceFooter(String invoiceFooter) {
    this.invoiceFooter = JsonNullable.<String>of(invoiceFooter);
  }


  public OrganizationBillingConfiguration invoiceGracePeriod(Integer invoiceGracePeriod) {
    
    this.invoiceGracePeriod = invoiceGracePeriod;
    return this;
  }

   /**
   * The grace period, expressed in days, for finalizing the invoice. This period refers to the additional time granted to your customers beyond the invoice due date to adjust usage and line items. Can be overwritten by the customerâ€™s grace period.
   * @return invoiceGracePeriod
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INVOICE_GRACE_PERIOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getInvoiceGracePeriod() {
    return invoiceGracePeriod;
  }


  @JsonProperty(JSON_PROPERTY_INVOICE_GRACE_PERIOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInvoiceGracePeriod(Integer invoiceGracePeriod) {
    this.invoiceGracePeriod = invoiceGracePeriod;
  }


  public OrganizationBillingConfiguration documentLocale(String documentLocale) {
    
    this.documentLocale = documentLocale;
    return this;
  }

   /**
   * The locale of the billing documents, expressed in the ISO 639-1 format. This field indicates the language or regional variant used for the documents content issued or the embeddable customer portal.
   * @return documentLocale
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOCUMENT_LOCALE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDocumentLocale() {
    return documentLocale;
  }


  @JsonProperty(JSON_PROPERTY_DOCUMENT_LOCALE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDocumentLocale(String documentLocale) {
    this.documentLocale = documentLocale;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrganizationBillingConfiguration organizationBillingConfiguration = (OrganizationBillingConfiguration) o;
    return equalsNullable(this.invoiceFooter, organizationBillingConfiguration.invoiceFooter) &&
        Objects.equals(this.invoiceGracePeriod, organizationBillingConfiguration.invoiceGracePeriod) &&
        Objects.equals(this.documentLocale, organizationBillingConfiguration.documentLocale);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(invoiceFooter), invoiceGracePeriod, documentLocale);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrganizationBillingConfiguration {\n");
    sb.append("    invoiceFooter: ").append(toIndentedString(invoiceFooter)).append("\n");
    sb.append("    invoiceGracePeriod: ").append(toIndentedString(invoiceGracePeriod)).append("\n");
    sb.append("    documentLocale: ").append(toIndentedString(documentLocale)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

