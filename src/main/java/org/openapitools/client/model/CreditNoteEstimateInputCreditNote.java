/*
 * Lago API documentation
 * Lago API allows your application to push customer information and metrics (events) from your application to the billing application.
 *
 * The version of the OpenAPI document: 0.53.0-beta
 * Contact: tech@getlago.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.openapitools.client.model.CreditNoteEstimateInputCreditNoteItemsInner;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreditNoteEstimateInputCreditNote
 */
@JsonPropertyOrder({
  CreditNoteEstimateInputCreditNote.JSON_PROPERTY_INVOICE_ID,
  CreditNoteEstimateInputCreditNote.JSON_PROPERTY_ITEMS
})
@JsonTypeName("CreditNoteEstimateInput_credit_note")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-27T14:12:55.372025191Z[Etc/UTC]")
public class CreditNoteEstimateInputCreditNote {
  public static final String JSON_PROPERTY_INVOICE_ID = "invoice_id";
  private UUID invoiceId;

  public static final String JSON_PROPERTY_ITEMS = "items";
  private List<CreditNoteEstimateInputCreditNoteItemsInner> items = new ArrayList<>();

  public CreditNoteEstimateInputCreditNote() {
  }

  public CreditNoteEstimateInputCreditNote invoiceId(UUID invoiceId) {
    
    this.invoiceId = invoiceId;
    return this;
  }

   /**
   * The invoice unique identifier, created by Lago.
   * @return invoiceId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_INVOICE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getInvoiceId() {
    return invoiceId;
  }


  @JsonProperty(JSON_PROPERTY_INVOICE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setInvoiceId(UUID invoiceId) {
    this.invoiceId = invoiceId;
  }


  public CreditNoteEstimateInputCreditNote items(List<CreditNoteEstimateInputCreditNoteItemsInner> items) {
    
    this.items = items;
    return this;
  }

  public CreditNoteEstimateInputCreditNote addItemsItem(CreditNoteEstimateInputCreditNoteItemsInner itemsItem) {
    if (this.items == null) {
      this.items = new ArrayList<>();
    }
    this.items.add(itemsItem);
    return this;
  }

   /**
   * The list of credit noteâ€™s items.
   * @return items
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ITEMS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<CreditNoteEstimateInputCreditNoteItemsInner> getItems() {
    return items;
  }


  @JsonProperty(JSON_PROPERTY_ITEMS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setItems(List<CreditNoteEstimateInputCreditNoteItemsInner> items) {
    this.items = items;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreditNoteEstimateInputCreditNote creditNoteEstimateInputCreditNote = (CreditNoteEstimateInputCreditNote) o;
    return Objects.equals(this.invoiceId, creditNoteEstimateInputCreditNote.invoiceId) &&
        Objects.equals(this.items, creditNoteEstimateInputCreditNote.items);
  }

  @Override
  public int hashCode() {
    return Objects.hash(invoiceId, items);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreditNoteEstimateInputCreditNote {\n");
    sb.append("    invoiceId: ").append(toIndentedString(invoiceId)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

