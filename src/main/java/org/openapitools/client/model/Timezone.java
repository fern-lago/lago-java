/*
 * Lago API documentation
 * Lago API allows your application to push customer information and metrics (events) from your application to the billing application.
 *
 * The version of the OpenAPI document: 0.52.2-beta
 * Contact: tech@getlago.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * Gets or Sets Timezone
 */
public enum Timezone {
  
  UTC("UTC"),
  
  AFRICA_ALGIERS("Africa/Algiers"),
  
  AFRICA_CAIRO("Africa/Cairo"),
  
  AFRICA_CASABLANCA("Africa/Casablanca"),
  
  AFRICA_HARARE("Africa/Harare"),
  
  AFRICA_JOHANNESBURG("Africa/Johannesburg"),
  
  AFRICA_MONROVIA("Africa/Monrovia"),
  
  AFRICA_NAIROBI("Africa/Nairobi"),
  
  AMERICA_ARGENTINA_BUENOS_AIRES("America/Argentina/Buenos_Aires"),
  
  AMERICA_BOGOTA("America/Bogota"),
  
  AMERICA_CARACAS("America/Caracas"),
  
  AMERICA_CHICAGO("America/Chicago"),
  
  AMERICA_CHIHUAHUA("America/Chihuahua"),
  
  AMERICA_DENVER("America/Denver"),
  
  AMERICA_GODTHAB("America/Godthab"),
  
  AMERICA_GUATEMALA("America/Guatemala"),
  
  AMERICA_GUYANA("America/Guyana"),
  
  AMERICA_HALIFAX("America/Halifax"),
  
  AMERICA_INDIANA_INDIANAPOLIS("America/Indiana/Indianapolis"),
  
  AMERICA_JUNEAU("America/Juneau"),
  
  AMERICA_LA_PAZ("America/La_Paz"),
  
  AMERICA_LIMA("America/Lima"),
  
  AMERICA_LOS_ANGELES("America/Los_Angeles"),
  
  AMERICA_MAZATLAN("America/Mazatlan"),
  
  AMERICA_MEXICO_CITY("America/Mexico_City"),
  
  AMERICA_MONTERREY("America/Monterrey"),
  
  AMERICA_MONTEVIDEO("America/Montevideo"),
  
  AMERICA_NEW_YORK("America/New_York"),
  
  AMERICA_PHOENIX("America/Phoenix"),
  
  AMERICA_PUERTO_RICO("America/Puerto_Rico"),
  
  AMERICA_REGINA("America/Regina"),
  
  AMERICA_SANTIAGO("America/Santiago"),
  
  AMERICA_SAO_PAULO("America/Sao_Paulo"),
  
  AMERICA_ST_JOHNS("America/St_Johns"),
  
  AMERICA_TIJUANA("America/Tijuana"),
  
  ASIA_ALMATY("Asia/Almaty"),
  
  ASIA_BAGHDAD("Asia/Baghdad"),
  
  ASIA_BAKU("Asia/Baku"),
  
  ASIA_BANGKOK("Asia/Bangkok"),
  
  ASIA_CHONGQING("Asia/Chongqing"),
  
  ASIA_COLOMBO("Asia/Colombo"),
  
  ASIA_DHAKA("Asia/Dhaka"),
  
  ASIA_HONG_KONG("Asia/Hong_Kong"),
  
  ASIA_IRKUTSK("Asia/Irkutsk"),
  
  ASIA_JAKARTA("Asia/Jakarta"),
  
  ASIA_JERUSALEM("Asia/Jerusalem"),
  
  ASIA_KABUL("Asia/Kabul"),
  
  ASIA_KAMCHATKA("Asia/Kamchatka"),
  
  ASIA_KARACHI("Asia/Karachi"),
  
  ASIA_KATHMANDU("Asia/Kathmandu"),
  
  ASIA_KOLKATA("Asia/Kolkata"),
  
  ASIA_KRASNOYARSK("Asia/Krasnoyarsk"),
  
  ASIA_KUALA_LUMPUR("Asia/Kuala_Lumpur"),
  
  ASIA_KUWAIT("Asia/Kuwait"),
  
  ASIA_MAGADAN("Asia/Magadan"),
  
  ASIA_MUSCAT("Asia/Muscat"),
  
  ASIA_NOVOSIBIRSK("Asia/Novosibirsk"),
  
  ASIA_RANGOON("Asia/Rangoon"),
  
  ASIA_RIYADH("Asia/Riyadh"),
  
  ASIA_SEOUL("Asia/Seoul"),
  
  ASIA_SHANGHAI("Asia/Shanghai"),
  
  ASIA_SINGAPORE("Asia/Singapore"),
  
  ASIA_SREDNEKOLYMSK("Asia/Srednekolymsk"),
  
  ASIA_TAIPEI("Asia/Taipei"),
  
  ASIA_TASHKENT("Asia/Tashkent"),
  
  ASIA_TBILISI("Asia/Tbilisi"),
  
  ASIA_TEHRAN("Asia/Tehran"),
  
  ASIA_TOKYO("Asia/Tokyo"),
  
  ASIA_ULAANBAATAR("Asia/Ulaanbaatar"),
  
  ASIA_URUMQI("Asia/Urumqi"),
  
  ASIA_VLADIVOSTOK("Asia/Vladivostok"),
  
  ASIA_YAKUTSK("Asia/Yakutsk"),
  
  ASIA_YEKATERINBURG("Asia/Yekaterinburg"),
  
  ASIA_YEREVAN("Asia/Yerevan"),
  
  ATLANTIC_AZORES("Atlantic/Azores"),
  
  ATLANTIC_CAPE_VERDE("Atlantic/Cape_Verde"),
  
  ATLANTIC_SOUTH_GEORGIA("Atlantic/South_Georgia"),
  
  AUSTRALIA_ADELAIDE("Australia/Adelaide"),
  
  AUSTRALIA_BRISBANE("Australia/Brisbane"),
  
  AUSTRALIA_DARWIN("Australia/Darwin"),
  
  AUSTRALIA_HOBART("Australia/Hobart"),
  
  AUSTRALIA_MELBOURNE("Australia/Melbourne"),
  
  AUSTRALIA_PERTH("Australia/Perth"),
  
  AUSTRALIA_SYDNEY("Australia/Sydney"),
  
  EUROPE_AMSTERDAM("Europe/Amsterdam"),
  
  EUROPE_ATHENS("Europe/Athens"),
  
  EUROPE_BELGRADE("Europe/Belgrade"),
  
  EUROPE_BERLIN("Europe/Berlin"),
  
  EUROPE_BRATISLAVA("Europe/Bratislava"),
  
  EUROPE_BRUSSELS("Europe/Brussels"),
  
  EUROPE_BUCHAREST("Europe/Bucharest"),
  
  EUROPE_BUDAPEST("Europe/Budapest"),
  
  EUROPE_COPENHAGEN("Europe/Copenhagen"),
  
  EUROPE_DUBLIN("Europe/Dublin"),
  
  EUROPE_HELSINKI("Europe/Helsinki"),
  
  EUROPE_ISTANBUL("Europe/Istanbul"),
  
  EUROPE_KALININGRAD("Europe/Kaliningrad"),
  
  EUROPE_KIEV("Europe/Kiev"),
  
  EUROPE_LISBON("Europe/Lisbon"),
  
  EUROPE_LJUBLJANA("Europe/Ljubljana"),
  
  EUROPE_LONDON("Europe/London"),
  
  EUROPE_MADRID("Europe/Madrid"),
  
  EUROPE_MINSK("Europe/Minsk"),
  
  EUROPE_MOSCOW("Europe/Moscow"),
  
  EUROPE_PARIS("Europe/Paris"),
  
  EUROPE_PRAGUE("Europe/Prague"),
  
  EUROPE_RIGA("Europe/Riga"),
  
  EUROPE_ROME("Europe/Rome"),
  
  EUROPE_SAMARA("Europe/Samara"),
  
  EUROPE_SARAJEVO("Europe/Sarajevo"),
  
  EUROPE_SKOPJE("Europe/Skopje"),
  
  EUROPE_SOFIA("Europe/Sofia"),
  
  EUROPE_STOCKHOLM("Europe/Stockholm"),
  
  EUROPE_TALLINN("Europe/Tallinn"),
  
  EUROPE_VIENNA("Europe/Vienna"),
  
  EUROPE_VILNIUS("Europe/Vilnius"),
  
  EUROPE_VOLGOGRAD("Europe/Volgograd"),
  
  EUROPE_WARSAW("Europe/Warsaw"),
  
  EUROPE_ZAGREB("Europe/Zagreb"),
  
  EUROPE_ZURICH("Europe/Zurich"),
  
  GMT_12("GMT+12"),
  
  PACIFIC_APIA("Pacific/Apia"),
  
  PACIFIC_AUCKLAND("Pacific/Auckland"),
  
  PACIFIC_CHATHAM("Pacific/Chatham"),
  
  PACIFIC_FAKAOFO("Pacific/Fakaofo"),
  
  PACIFIC_FIJI("Pacific/Fiji"),
  
  PACIFIC_GUADALCANAL("Pacific/Guadalcanal"),
  
  PACIFIC_GUAM("Pacific/Guam"),
  
  PACIFIC_HONOLULU("Pacific/Honolulu"),
  
  PACIFIC_MAJURO("Pacific/Majuro"),
  
  PACIFIC_MIDWAY("Pacific/Midway"),
  
  PACIFIC_NOUMEA("Pacific/Noumea"),
  
  PACIFIC_PAGO_PAGO("Pacific/Pago_Pago"),
  
  PACIFIC_PORT_MORESBY("Pacific/Port_Moresby"),
  
  PACIFIC_TONGATAPU("Pacific/Tongatapu");

  private String value;

  Timezone(String value) {
    this.value = value;
  }

  @JsonValue
  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  @JsonCreator
  public static Timezone fromValue(String value) {
    for (Timezone b : Timezone.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }
}

